//go:build !ignore_autogenerated

/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionEnabledRepo) DeepCopyInto(out *ActionEnabledRepo) {
	*out = *in
	if in.RepoRef != nil {
		in, out := &in.RepoRef, &out.RepoRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepoSelector != nil {
		in, out := &in.RepoSelector, &out.RepoSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionEnabledRepo.
func (in *ActionEnabledRepo) DeepCopy() *ActionEnabledRepo {
	if in == nil {
		return nil
	}
	out := new(ActionEnabledRepo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsConfiguration) DeepCopyInto(out *ActionsConfiguration) {
	*out = *in
	if in.EnabledRepos != nil {
		in, out := &in.EnabledRepos, &out.EnabledRepos
		*out = make([]ActionEnabledRepo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsConfiguration.
func (in *ActionsConfiguration) DeepCopy() *ActionsConfiguration {
	if in == nil {
		return nil
	}
	out := new(ActionsConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionRestrictions) DeepCopyInto(out *BranchProtectionRestrictions) {
	*out = *in
	if in.BlockCreations != nil {
		in, out := &in.BlockCreations, &out.BlockCreations
		*out = new(bool)
		**out = **in
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Apps != nil {
		in, out := &in.Apps, &out.Apps
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionRestrictions.
func (in *BranchProtectionRestrictions) DeepCopy() *BranchProtectionRestrictions {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionRestrictions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionRule) DeepCopyInto(out *BranchProtectionRule) {
	*out = *in
	if in.RequiredStatusChecks != nil {
		in, out := &in.RequiredStatusChecks, &out.RequiredStatusChecks
		*out = new(RequiredStatusChecks)
		(*in).DeepCopyInto(*out)
	}
	if in.RequiredPullRequestReviews != nil {
		in, out := &in.RequiredPullRequestReviews, &out.RequiredPullRequestReviews
		*out = new(RequiredPullRequestReviews)
		(*in).DeepCopyInto(*out)
	}
	if in.BranchProtectionRestrictions != nil {
		in, out := &in.BranchProtectionRestrictions, &out.BranchProtectionRestrictions
		*out = new(BranchProtectionRestrictions)
		(*in).DeepCopyInto(*out)
	}
	if in.RequireLinearHistory != nil {
		in, out := &in.RequireLinearHistory, &out.RequireLinearHistory
		*out = new(bool)
		**out = **in
	}
	if in.AllowForcePushes != nil {
		in, out := &in.AllowForcePushes, &out.AllowForcePushes
		*out = new(bool)
		**out = **in
	}
	if in.AllowDeletions != nil {
		in, out := &in.AllowDeletions, &out.AllowDeletions
		*out = new(bool)
		**out = **in
	}
	if in.RequiredConversationResolution != nil {
		in, out := &in.RequiredConversationResolution, &out.RequiredConversationResolution
		*out = new(bool)
		**out = **in
	}
	if in.LockBranch != nil {
		in, out := &in.LockBranch, &out.LockBranch
		*out = new(bool)
		**out = **in
	}
	if in.AllowForkSyncing != nil {
		in, out := &in.AllowForkSyncing, &out.AllowForkSyncing
		*out = new(bool)
		**out = **in
	}
	if in.RequireSignedCommits != nil {
		in, out := &in.RequireSignedCommits, &out.RequireSignedCommits
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionRule.
func (in *BranchProtectionRule) DeepCopy() *BranchProtectionRule {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BypassPullRequestAllowancesRequest) DeepCopyInto(out *BypassPullRequestAllowancesRequest) {
	*out = *in
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Apps != nil {
		in, out := &in.Apps, &out.Apps
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BypassPullRequestAllowancesRequest.
func (in *BypassPullRequestAllowancesRequest) DeepCopy() *BypassPullRequestAllowancesRequest {
	if in == nil {
		return nil
	}
	out := new(BypassPullRequestAllowancesRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DismissalRestrictionsRequest) DeepCopyInto(out *DismissalRestrictionsRequest) {
	*out = *in
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Apps != nil {
		in, out := &in.Apps, &out.Apps
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DismissalRestrictionsRequest.
func (in *DismissalRestrictionsRequest) DeepCopy() *DismissalRestrictionsRequest {
	if in == nil {
		return nil
	}
	out := new(DismissalRestrictionsRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Membership) DeepCopyInto(out *Membership) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Membership.
func (in *Membership) DeepCopy() *Membership {
	if in == nil {
		return nil
	}
	out := new(Membership)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Membership) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MembershipList) DeepCopyInto(out *MembershipList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Membership, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MembershipList.
func (in *MembershipList) DeepCopy() *MembershipList {
	if in == nil {
		return nil
	}
	out := new(MembershipList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MembershipList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MembershipObservation) DeepCopyInto(out *MembershipObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MembershipObservation.
func (in *MembershipObservation) DeepCopy() *MembershipObservation {
	if in == nil {
		return nil
	}
	out := new(MembershipObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MembershipParameters) DeepCopyInto(out *MembershipParameters) {
	*out = *in
	if in.OrgRef != nil {
		in, out := &in.OrgRef, &out.OrgRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgSelector != nil {
		in, out := &in.OrgSelector, &out.OrgSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MembershipParameters.
func (in *MembershipParameters) DeepCopy() *MembershipParameters {
	if in == nil {
		return nil
	}
	out := new(MembershipParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MembershipSpec) DeepCopyInto(out *MembershipSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MembershipSpec.
func (in *MembershipSpec) DeepCopy() *MembershipSpec {
	if in == nil {
		return nil
	}
	out := new(MembershipSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MembershipStatus) DeepCopyInto(out *MembershipStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MembershipStatus.
func (in *MembershipStatus) DeepCopy() *MembershipStatus {
	if in == nil {
		return nil
	}
	out := new(MembershipStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Organization) DeepCopyInto(out *Organization) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Organization.
func (in *Organization) DeepCopy() *Organization {
	if in == nil {
		return nil
	}
	out := new(Organization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Organization) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationList) DeepCopyInto(out *OrganizationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Organization, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationList.
func (in *OrganizationList) DeepCopy() *OrganizationList {
	if in == nil {
		return nil
	}
	out := new(OrganizationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationObservation) DeepCopyInto(out *OrganizationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationObservation.
func (in *OrganizationObservation) DeepCopy() *OrganizationObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationParameters) DeepCopyInto(out *OrganizationParameters) {
	*out = *in
	in.Actions.DeepCopyInto(&out.Actions)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationParameters.
func (in *OrganizationParameters) DeepCopy() *OrganizationParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationSpec) DeepCopyInto(out *OrganizationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationSpec.
func (in *OrganizationSpec) DeepCopy() *OrganizationSpec {
	if in == nil {
		return nil
	}
	out := new(OrganizationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationStatus) DeepCopyInto(out *OrganizationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationStatus.
func (in *OrganizationStatus) DeepCopy() *OrganizationStatus {
	if in == nil {
		return nil
	}
	out := new(OrganizationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepoFork) DeepCopyInto(out *RepoFork) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepoFork.
func (in *RepoFork) DeepCopy() *RepoFork {
	if in == nil {
		return nil
	}
	out := new(RepoFork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository) DeepCopyInto(out *Repository) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository.
func (in *Repository) DeepCopy() *Repository {
	if in == nil {
		return nil
	}
	out := new(Repository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Repository) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryList) DeepCopyInto(out *RepositoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Repository, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryList.
func (in *RepositoryList) DeepCopy() *RepositoryList {
	if in == nil {
		return nil
	}
	out := new(RepositoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryObservation) DeepCopyInto(out *RepositoryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryObservation.
func (in *RepositoryObservation) DeepCopy() *RepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryParameters) DeepCopyInto(out *RepositoryParameters) {
	*out = *in
	in.Permissions.DeepCopyInto(&out.Permissions)
	if in.Webhooks != nil {
		in, out := &in.Webhooks, &out.Webhooks
		*out = make([]RepositoryWebhook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BranchProtectionRules != nil {
		in, out := &in.BranchProtectionRules, &out.BranchProtectionRules
		*out = make([]BranchProtectionRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateFromTemplate != nil {
		in, out := &in.CreateFromTemplate, &out.CreateFromTemplate
		*out = new(TemplateRepo)
		**out = **in
	}
	if in.CreateFork != nil {
		in, out := &in.CreateFork, &out.CreateFork
		*out = new(RepoFork)
		**out = **in
	}
	if in.OrgRef != nil {
		in, out := &in.OrgRef, &out.OrgRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgSelector != nil {
		in, out := &in.OrgSelector, &out.OrgSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Archived != nil {
		in, out := &in.Archived, &out.Archived
		*out = new(bool)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(bool)
		**out = **in
	}
	if in.IsTemplate != nil {
		in, out := &in.IsTemplate, &out.IsTemplate
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryParameters.
func (in *RepositoryParameters) DeepCopy() *RepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryPermissions) DeepCopyInto(out *RepositoryPermissions) {
	*out = *in
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]RepositoryUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]RepositoryTeam, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryPermissions.
func (in *RepositoryPermissions) DeepCopy() *RepositoryPermissions {
	if in == nil {
		return nil
	}
	out := new(RepositoryPermissions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositorySpec) DeepCopyInto(out *RepositorySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositorySpec.
func (in *RepositorySpec) DeepCopy() *RepositorySpec {
	if in == nil {
		return nil
	}
	out := new(RepositorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryStatus) DeepCopyInto(out *RepositoryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryStatus.
func (in *RepositoryStatus) DeepCopy() *RepositoryStatus {
	if in == nil {
		return nil
	}
	out := new(RepositoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryTeam) DeepCopyInto(out *RepositoryTeam) {
	*out = *in
	if in.TeamRef != nil {
		in, out := &in.TeamRef, &out.TeamRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TeamSelector != nil {
		in, out := &in.TeamSelector, &out.TeamSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryTeam.
func (in *RepositoryTeam) DeepCopy() *RepositoryTeam {
	if in == nil {
		return nil
	}
	out := new(RepositoryTeam)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryUser) DeepCopyInto(out *RepositoryUser) {
	*out = *in
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryUser.
func (in *RepositoryUser) DeepCopy() *RepositoryUser {
	if in == nil {
		return nil
	}
	out := new(RepositoryUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryWebhook) DeepCopyInto(out *RepositoryWebhook) {
	*out = *in
	if in.InsecureSsl != nil {
		in, out := &in.InsecureSsl, &out.InsecureSsl
		*out = new(bool)
		**out = **in
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryWebhook.
func (in *RepositoryWebhook) DeepCopy() *RepositoryWebhook {
	if in == nil {
		return nil
	}
	out := new(RepositoryWebhook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredPullRequestReviews) DeepCopyInto(out *RequiredPullRequestReviews) {
	*out = *in
	if in.RequireLastPushApproval != nil {
		in, out := &in.RequireLastPushApproval, &out.RequireLastPushApproval
		*out = new(bool)
		**out = **in
	}
	if in.BypassPullRequestAllowances != nil {
		in, out := &in.BypassPullRequestAllowances, &out.BypassPullRequestAllowances
		*out = new(BypassPullRequestAllowancesRequest)
		(*in).DeepCopyInto(*out)
	}
	if in.DismissalRestrictions != nil {
		in, out := &in.DismissalRestrictions, &out.DismissalRestrictions
		*out = new(DismissalRestrictionsRequest)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredPullRequestReviews.
func (in *RequiredPullRequestReviews) DeepCopy() *RequiredPullRequestReviews {
	if in == nil {
		return nil
	}
	out := new(RequiredPullRequestReviews)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredStatusCheck) DeepCopyInto(out *RequiredStatusCheck) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredStatusCheck.
func (in *RequiredStatusCheck) DeepCopy() *RequiredStatusCheck {
	if in == nil {
		return nil
	}
	out := new(RequiredStatusCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredStatusChecks) DeepCopyInto(out *RequiredStatusChecks) {
	*out = *in
	if in.Checks != nil {
		in, out := &in.Checks, &out.Checks
		*out = make([]*RequiredStatusCheck, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RequiredStatusCheck)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredStatusChecks.
func (in *RequiredStatusChecks) DeepCopy() *RequiredStatusChecks {
	if in == nil {
		return nil
	}
	out := new(RequiredStatusChecks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Team) DeepCopyInto(out *Team) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Team.
func (in *Team) DeepCopy() *Team {
	if in == nil {
		return nil
	}
	out := new(Team)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Team) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamList) DeepCopyInto(out *TeamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Team, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamList.
func (in *TeamList) DeepCopy() *TeamList {
	if in == nil {
		return nil
	}
	out := new(TeamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TeamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamMemberTeam) DeepCopyInto(out *TeamMemberTeam) {
	*out = *in
	if in.TeamRef != nil {
		in, out := &in.TeamRef, &out.TeamRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TeamSelector != nil {
		in, out := &in.TeamSelector, &out.TeamSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamMemberTeam.
func (in *TeamMemberTeam) DeepCopy() *TeamMemberTeam {
	if in == nil {
		return nil
	}
	out := new(TeamMemberTeam)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamMemberUser) DeepCopyInto(out *TeamMemberUser) {
	*out = *in
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamMemberUser.
func (in *TeamMemberUser) DeepCopy() *TeamMemberUser {
	if in == nil {
		return nil
	}
	out := new(TeamMemberUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamObservation) DeepCopyInto(out *TeamObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamObservation.
func (in *TeamObservation) DeepCopy() *TeamObservation {
	if in == nil {
		return nil
	}
	out := new(TeamObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamParameters) DeepCopyInto(out *TeamParameters) {
	*out = *in
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]TeamMemberUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OrgRef != nil {
		in, out := &in.OrgRef, &out.OrgRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgSelector != nil {
		in, out := &in.OrgSelector, &out.OrgSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.ParentRef != nil {
		in, out := &in.ParentRef, &out.ParentRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ParentSelector != nil {
		in, out := &in.ParentSelector, &out.ParentSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Privacy != nil {
		in, out := &in.Privacy, &out.Privacy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamParameters.
func (in *TeamParameters) DeepCopy() *TeamParameters {
	if in == nil {
		return nil
	}
	out := new(TeamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamSpec) DeepCopyInto(out *TeamSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamSpec.
func (in *TeamSpec) DeepCopy() *TeamSpec {
	if in == nil {
		return nil
	}
	out := new(TeamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamStatus) DeepCopyInto(out *TeamStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamStatus.
func (in *TeamStatus) DeepCopy() *TeamStatus {
	if in == nil {
		return nil
	}
	out := new(TeamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateRepo) DeepCopyInto(out *TemplateRepo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateRepo.
func (in *TemplateRepo) DeepCopy() *TemplateRepo {
	if in == nil {
		return nil
	}
	out := new(TemplateRepo)
	in.DeepCopyInto(out)
	return out
}
