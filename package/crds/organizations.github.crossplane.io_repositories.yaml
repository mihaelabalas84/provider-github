---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: repositories.organizations.github.crossplane.io
spec:
  group: organizations.github.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: Repository
    listKind: RepositoryList
    plural: repositories
    singular: repository
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Repository is an example API type.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A RepositorySpec defines the desired state of a Repository.
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: RepositoryParameters are the configurable fields of a
                  Repository.
                properties:
                  archived:
                    description: Archived sets if a repository should be archived
                      on delete
                    type: boolean
                  branchProtectionRules:
                    items:
                      description: |-
                        BranchProtectionRule represents a rule for protecting a branch in a repository.
                        It includes various parameters for enforcing code quality and access control.
                      properties:
                        allowDeletions:
                          description: |-
                            Allow users with push access to delete matching branches.
                            Default: false
                          type: boolean
                        allowForcePushes:
                          description: |-
                            Permit force pushes for all users with push access.
                            Default: false
                          type: boolean
                        allowForkSyncing:
                          description: |-
                            Will allow users to pull changes from upstream when the branch is locked.
                            Default: false
                          type: boolean
                        branch:
                          description: The branch name to apply the protection rule
                            to.
                          type: string
                        branchProtectionRestrictions:
                          description: |-
                            Restrict who can push to matching branches.
                            Specify people, teams, or apps allowed to push to matching branches.
                            Required status checks will still prevent these people, teams, and apps from merging if the checks fail.
                          properties:
                            apps:
                              description: Only apps allowed to push will be able
                                to create new branches matching this rule.
                              items:
                                type: string
                              type: array
                            blockCreations:
                              description: |-
                                If set to true, will cause the restrictions setting to also block pushes which create new branches
                                unless initiated by a user, team, app with the ability to push.
                                Default: false
                              type: boolean
                            teams:
                              description: Only teams allowed to push will be able
                                to create new branches matching this rule.
                              items:
                                type: string
                              type: array
                            users:
                              description: Only people allowed to push will be able
                                to create new branches matching this rule.
                              items:
                                type: string
                              type: array
                          type: object
                        enforceAdmins:
                          description: Enforce settings even for administrators and
                            custom roles with the "bypass branch protections" permission.
                          type: boolean
                        lockBranch:
                          description: |-
                            Branch is read-only. Users cannot push to the branch.
                            Default: false
                          type: boolean
                        requireLinearHistory:
                          description: |-
                            Prevent merge commits from being pushed to matching branches.
                            Default: false
                          type: boolean
                        requireSignedCommits:
                          description: |-
                            Commits pushed to matching branches must have verified signatures.
                            Default: false
                          type: boolean
                        requiredConversationResolution:
                          description: |-
                            When enabled, all conversations on code must be resolved before a pull request can be merged into a branch that matches this rule.
                            Default: false
                          type: boolean
                        requiredPullRequestReviews:
                          description: |-
                            Require a pull request before merging.
                            When enabled, all commits must be made to a non-protected branch and submitted via a pull request
                            before they can be merged into a branch that matches this rule.
                          properties:
                            bypassPullRequestAllowances:
                              description: Allow specific users, teams, or apps to
                                bypass pull request requirements.
                              properties:
                                apps:
                                  description: The list of app slugs allowed to bypass
                                    pull request requirements.
                                  items:
                                    type: string
                                  type: array
                                teams:
                                  description: The list of team slugs allowed to bypass
                                    pull request requirements.
                                  items:
                                    type: string
                                  type: array
                                users:
                                  description: The list of user logins allowed to
                                    bypass pull request requirements.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            dismissStaleReviews:
                              description: Set to true if you want to automatically
                                dismiss approving reviews when someone pushes a new
                                commit.
                              type: boolean
                            dismissalRestrictions:
                              description: Specify which users, teams, and apps can
                                dismiss pull request reviews.
                              properties:
                                apps:
                                  description: The list of app slugs with dismissal
                                    access.
                                  items:
                                    type: string
                                  type: array
                                teams:
                                  description: The list of team slugs with dismissal
                                    access.
                                  items:
                                    type: string
                                  type: array
                                users:
                                  description: The list of user logins with dismissal
                                    access.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            requireCodeOwnerReviews:
                              description: Blocks merging pull requests until code
                                owners review them.
                              type: boolean
                            requireLastPushApproval:
                              description: |-
                                Whether the most recent push must be approved by someone other than the person who pushed it.
                                Default: false
                              type: boolean
                            requiredApprovingReviewCount:
                              description: Specify the number of reviewers required
                                to approve pull requests. Use a number between 1 and
                                6 or 0 to not require reviewers.
                              type: integer
                          required:
                          - dismissStaleReviews
                          - requireCodeOwnerReviews
                          - requiredApprovingReviewCount
                          type: object
                        requiredStatusChecks:
                          description: |-
                            Require status checks to pass before merging.
                            When enabled, commits must first be pushed to another branch,
                            then merged or pushed directly to a branch that matches this rule after status checks have passed.
                          properties:
                            checks:
                              description: The list of status checks to require in
                                order to merge into this branch.
                              items:
                                description: RequiredStatusCheck represents the configuration
                                  for a single check
                                properties:
                                  appId:
                                    description: |-
                                      The ID of the GitHub App that must provide this check.
                                      Omit this field to explicitly allow any app to set the status.
                                    format: int64
                                    minimum: 2
                                    type: integer
                                  context:
                                    description: The name of the required check.
                                    type: string
                                required:
                                - context
                                type: object
                              type: array
                            strict:
                              description: Require branches to be up-to-date before
                                merging.
                              type: boolean
                          required:
                          - checks
                          - strict
                          type: object
                      required:
                      - branch
                      - enforceAdmins
                      type: object
                    type: array
                  createFork:
                    description: Creates a repository fork, it takes precedence over
                      "CreateFromTemplate" setting.
                    properties:
                      defaultBranchOnly:
                        description: When forking from an existing repository, fork
                          with only the default branch.
                        type: boolean
                      owner:
                        description: The account owner of the repository. The name
                          is not case-sensitive.
                        type: string
                      repo:
                        description: The name of the repository without the .git extension.
                          The name is not case-sensitive.
                        type: string
                    required:
                    - defaultBranchOnly
                    - owner
                    - repo
                    type: object
                  createFromTemplate:
                    description: Creates a new repository using a repository template
                    properties:
                      includeAllBranches:
                        description: |-
                          Set to true to include the directory structure and files from all branches in the template repository,
                          and not just the default branch.
                        type: boolean
                      owner:
                        description: The account owner of the template repository.
                          The name is not case-sensitive.
                        type: string
                      repo:
                        description: The name of the template repository without the
                          .git extension. The name is not case-sensitive.
                        type: string
                    required:
                    - includeAllBranches
                    - owner
                    - repo
                    type: object
                  description:
                    type: string
                  forceDelete:
                    description: Safeguard for accidental deletion
                    type: boolean
                  isTemplate:
                    description: |-
                      Set to true to make this repo available as a template repository.
                      Default: false
                    type: boolean
                  org:
                    description: Org is the Organization for the Membership
                    type: string
                  orgRef:
                    description: OrgRef is a reference to an Organization
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  orgSelector:
                    description: OrgSlector selects a reference to an Organization
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  permissions:
                    description: RepositoryParameters are the configurable fields
                      of a Repository.
                    properties:
                      teams:
                        items:
                          properties:
                            role:
                              description: Role is the role of the team
                              type: string
                            team:
                              description: Team is the name of the team
                              type: string
                            teamRef:
                              description: TeamRef is a reference to a Team
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            teamSelector:
                              description: TeamSelector selects a reference to a Team
                              properties:
                                matchControllerRef:
                                  description: |-
                                    MatchControllerRef ensures an object with the same controller reference
                                    as the selecting object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          required:
                          - role
                          type: object
                        type: array
                      users:
                        items:
                          properties:
                            role:
                              description: Role is the role of the user
                              type: string
                            user:
                              description: Name is the name of the user
                              type: string
                            userRef:
                              description: Name is a reference to an Membership
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            userSelector:
                              description: NameSelector selects a reference to an
                                Organization
                              properties:
                                matchControllerRef:
                                  description: |-
                                    MatchControllerRef ensures an object with the same controller reference
                                    as the selecting object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          required:
                          - role
                          type: object
                        type: array
                    type: object
                  private:
                    description: Private sets the repository to private, if false
                      it will be public
                    type: boolean
                  webhooks:
                    items:
                      description: |-
                        Repository webhook
                        https://docs.github.com/en/webhooks/types-of-webhooks#repository-webhooks
                      properties:
                        active:
                          description: |-
                            Determines if notifications are sent when the webhook is triggered.
                            Default: true
                          type: boolean
                        contentType:
                          description: The media type used to serialize the payloads.
                            Supported values include json and form.
                          enum:
                          - json
                          - form
                          type: string
                        events:
                          description: Determines what events the hook is triggered
                            for. See https://docs.github.com/en/webhooks/webhook-events-and-payloads
                          items:
                            type: string
                          type: array
                        insecureSsl:
                          description: |-
                            Determines whether the SSL certificate of the host for url will be verified when delivering payloads.
                            We strongly recommend not setting this to true as you are subject to man-in-the-middle and other attacks.
                            Default: false
                          type: boolean
                        url:
                          description: The URL to which the payloads will be delivered.
                          type: string
                      required:
                      - contentType
                      - events
                      - url
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
                  unless the relevant Crossplane feature flag is enabled, and may be
                  changed or removed without notice.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: |-
                  ProviderReference specifies the provider that will be used to create,
                  observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A RepositoryStatus represents the observed state of a Repository.
            properties:
              atProvider:
                description: RepositoryObservation are the observable fields of a
                  Repository.
                properties:
                  observableField:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
